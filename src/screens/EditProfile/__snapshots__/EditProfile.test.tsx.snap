// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render EditProfile should render EditProfile 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTSafeAreaView
      style={
        {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "minHeight": "100%",
          "minWidth": "100%",
        }
      }
    >
      <RCTScrollView
        style={
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          }
        }
      >
        <View>
          <View
            style={
              {
                "alignItems": "center",
                "elevation": 2,
                "flexDirection": "row",
                "height": 60,
                "justifyContent": "space-between",
                "padding": 15,
              }
            }
            testID="editProfileHeader"
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
              testID="cancelButton"
            >
              <Text
                style={
                  {
                    "color": "#000000",
                    "fontSize": 8,
                  }
                }
              >
                Cancel
              </Text>
            </View>
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "#000000",
                  "fontSize": 8,
                }
              }
            >
              Save
            </Text>
          </View>
          <View
            style={
              [
                {
                  "backgroundColor": "rgba(202, 196, 208, 1)",
                  "height": 0.5,
                },
                undefined,
                false,
                false,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "marginBottom": "3%",
                "paddingTop": "5%",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "padding": 30,
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "borderRadius": 100,
                    "height": 100,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 100,
                  }
                }
                testID="profileImage"
              >
                <test-file-stub
                  height={100}
                  width={100}
                />
              </View>
              <Text
                style={
                  {
                    "color": "black",
                  }
                }
              >
                Edit
              </Text>
              <View
                style={
                  {
                    "flex": 1,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
              >
                <Text>
                  Name
                </Text>
                <TextInput
                  containerStyle={
                    {
                      "marginVertical": 10,
                    }
                  }
                  label="Name"
                  placeholder="First Name"
                  placeholderOne="First Name"
                  placeholderTwo="Last Name"
                  style={
                    {
                      "borderColor": "black",
                      "borderLeftWidth": 0.5,
                      "borderRightWidth": 0.5,
                      "borderTopLeftRadius": 5,
                      "borderTopRightRadius": 5,
                      "borderTopWidth": 0.5,
                      "padding": 15,
                    }
                  }
                />
                <TextInput
                  containerStyle={
                    {
                      "marginVertical": 10,
                    }
                  }
                  label="Name"
                  placeholder="Last Name"
                  placeholderOne="First Name"
                  placeholderTwo="Last Name"
                  style={
                    {
                      "borderBottomLeftRadius": 5,
                      "borderBottomRightRadius": 5,
                      "borderColor": "black",
                      "borderWidth": 0.5,
                      "padding": 15,
                    }
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
              >
                <Text>
                  Hometown
                </Text>
                <TextInput
                  containerStyle={
                    {
                      "marginVertical": 10,
                    }
                  }
                  label="Hometown"
                  placeholder="Town/City, Country/Region"
                  style={
                    {
                      "borderColor": "black",
                      "borderRadius": 5,
                      "borderWidth": 0.5,
                      "padding": 15,
                    }
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
              >
                <Text>
                  Bio
                </Text>
                <TextInput
                  containerStyle={
                    {
                      "marginVertical": 10,
                    }
                  }
                  inputStyle={
                    {
                      "height": 100,
                      "textAlignVertical": "top",
                    }
                  }
                  label="Bio"
                  multiline={true}
                  placeholder="150 characters"
                  style={
                    {
                      "borderColor": "black",
                      "borderRadius": 5,
                      "borderWidth": 0.5,
                      "height": 100,
                      "padding": 15,
                      "textAlignVertical": "top",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </RCTSafeAreaView>
  </View>
</RNCSafeAreaProvider>
`;
